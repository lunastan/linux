1. Open local account 
$ sudo su -
$ sudo adduser amos
$ sudo visudo
# visudo
root 	ALL=(ALL:ALL) ALL
amos 	ALL=(ALL:ALL) ALL <- 추가 후 :wq 로 저장



2. conda virtualenv install
$ mkdir Downloads
$ cd Downloads
$ wget https://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh
$ bash A*
엔터, 스페이스 한번씩 누르기
license terms -> yes
[/home/amos/anaconda3] -> 엔터
in your /home/amos/.bashrc? -> yes  ******* 중요 *******
Microsoft VSCode -> no
설치가 완료 되면 ~/.bashrc 파일에 conda init이 추가 되었는지 확인. 없으면 다음 내용 마지막에 추가.
$ vi ~/.bashrc
# .bashrc
# added by Anaconda3 2018.12 installer
# >>> conda init >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(CONDA_REPORT_ERRORS=false '/home/amos/anaconda3/bin/conda' shell.bash hook 2> /dev/null)"
if [ $? -eq 0 ]; then
    \eval "$__conda_setup"
else
    if [ -f "/home/amos/anaconda3/etc/profile.d/conda.sh" ]; then
 . "/home/amos/anaconda3/etc/profile.d/conda.sh"
CONDA_CHANGEPS1=false conda activate base
    else
\export PATH="/home/amos/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda init <<<
$ source ~/.bashrc
$ conda --version으로 버전 확인이 가능하면 설치 완료.
가끔 sudo conda 를 입력하라면서 conda 명령어가 듣지 않을 때가 있음. 
재부팅을 하거나 source ~/.bashrc로 경로 한번 더 설정해주기.



3. conda virtualenv activate
$ cd ~
$ conda create -n Django python=3.8.5
proceed? -> y
$ conda activate Django
(Django) amos@ip-172-31-38-198:~$  // 이런식으로 맨 앞에 가상환경의 이름이 붙으면 가상환경이 activate 된 상태임.
뭔가를 설치할 땐 항상 가상환경이 activate상태인지 확인하자. 
****가상환경을 설치하지 않으면 여러 버전이 충돌하는 문제가 굉장히 빈번하게 일어난다!****



4. github clone 
$ mkdir projects
$ cd projects
$ git clone https://github.com/gwhong917/parksite        ////git이 install 되어 있지 않은 경우 conda install git 명령어로 설치해주기



5. local runserver
$ conda install django==3.1.3
$ conda install pymysql
$ pip install django-bootstrap4
$ cd /home/amos/projects/parksite 
$ python manage.py runserver



6. remote 8000 port runserver
$ cd /home/amos/projects/parksite/config
$ vi settings.py 
ALLOWED_HOSTS = ['**.***.***.**']     //// 부분 자신의 EC2 Static IP addr 입력
변경사항 :wq로 저장 후에 
$ cd /home/amos/projects/parksite/
$ python manage.py runserver 0:8000
만약 that port is already in use 에러 확인 시 포트 죽이기 -> sudo lsof -t -i tcp:8000 | xargs kill -9
외부 PC에서 http://본인 아이피 주소:8000/parksite 접속 시 제대로 뜨는지 확인.



7. gunicorn install
$ conda install gunicorn
$ gunicorn --version   #으로 설치 확인
$ cd /home/amos/projects/parksite/
$ gunicorn --bind 0:8000 config.wsgi:application
실행 시
[2020-04-17 00:59:12 +0000] [32356] [INFO] Starting gunicorn 20.0.4
[2020-04-17 00:59:12 +0000] [32356] [INFO] Listening at: http://0.0.0.0:8000 (32356)
[2020-04-17 00:59:12 +0000] [32356] [INFO] Using worker: sync
[2020-04-17 00:59:12 +0000] [32359] [INFO] Booting worker with pid: 32359 
라는 오류가 없으면 성공적. http://본인 아이피 주소:8000/parksite로 접속해 확인하면 사이트가 조금 이상하게 변한 것을 확인할 수 있다.
static의 경로에 존재하는 css 확장자 파일들은 정적 페이지들이라 동적 페이지만 해석 할 수 있는 gunicorn이 css를 해석하지 못하여 생긴 일.
하지만 gunicorn이 정상적으로 작동하는 것을 확인했으니 넘어간다.



8. unix socket
$ cd /home/amos/projects/parksite/
$ gunicorn --bind unix:/tmp/gunicorn.sock config.wsgi:application
다시 정상적으로 실행되는지 확인. /tmp/gunicorn.sock에 바인드 될 수 있는지 확인해야 한다. 
오류시 log를 확인하여 수정.



9. wsgi service config
$ cd /etc/systemd/system
$ sudo nano gunicorn.service
#gunicorn.service
[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=amos #로그인 할 때 user
Group=amos #터미널에서 groups 명령어를 쳤을 때 나오는 group
WorkingDirectory=/home/amos/projects/parksite #config 파일이 있는 경로 
ExecStart=/home/amos/anaconda3/envs/Django/bin/gunicorn --workers 2 --bind unix:/tmp/gunicorn.sock config.wsgi:application --timeout 600
#Django venv가 위치한 곳의 gunicorn 경로 - conda info --envs를 쳐보면 나옴

[Install]
WantedBy=multi-user.target # ctrl + x 누르고 yes 누른 다음에 엔터 

$ sudo systemctl start gunicorn
$ sudo systemctl enable gunicorn
$ sudo systemctl status gunicorn.service
결과 창에 초록색 activate(running)이 떠있으면 성공

10. Nginx start
$ sudo apt-get update
$ sudo apt-get install nginx
$ sudo rm -f /etc/nginx/sites-enabled/default
$ sudo rm -f /etc/nginx/sites-available/default 
$ sudo nano /etc/nginx/sites-available/parksite
#parksite
server {
	listen 80;
	server_name 15.165.161.118;

	location / {
		include proxy_params;
		proxy_pass http://unix:/tmp/gunicorn.sock;
	}
}
$ cd /etc/nginx/sites-enabled 
$ sudo ln -s /etc/nginx/sites-available/parksite
$ sudo systemctl restart nginx

11. static css
$ pip install whitenoise
$ cd /home/amos/projects/parksite/config
$ vi settings.py
# settings.py
MIDDLEWARE = [
	'whitenoise.middleware.WhiteNoiseMiddleware',  ###추가하기
파일 경로 밑에 static 폴더 정해주기


** 화면이 변하지 않는다면 gunicorn과 nginx restart 해보기
netstat -anp | grep 80 sudo fuser -k 80/tcp
bad gateway 오류 시에 daemon을 리로드 하거나 gunicorn을 restart
